version : '3'
services:
  db:
    container_name: mongo_service
    image: mongo:5.0.6
    restart: on-failure
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${DB_HOST}:${DB_PORT}"]
      interval: 4s
      timeout: 3s
      retries: 10

#  db-seed:
#    build:
#      context: ./db
#      dockerfile : Dockerfile-local
#    depends_on:
#      - db

  web:
    container_name: web_service
    build:
      context: .
      dockerfile : ./web/Dockerfile-local
      args:
        WEB: ${WEB}
        BASE: ${BASE}
        STATIC: ${STATIC}
        WEB_PORT: ${WEB_PORT}
        MODULE_NAME: ${WEB}/config/wsgi/local
        VARIABLE_NAME: application
    command: sh -c "python manage.py collectstatic --no-input &&
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py initiate_admin &&
                    python manage.py collectstatic"
    restart: on-failure
    volumes:
      - ./web:${WEB}
      - ${PWD}/.env.local:${BASE}/.env.local
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${WEB_HOST}:${WEB_PORT}"]
      interval: 2.5s
      timeout: 2s
      retries: 5

  nginx:
    container_name: nginx_service
    build:
      context: ./nginx
      dockerfile: Dockerfile-local
    restart: on-failure
    volumes:
      - ./nginx:${NGINX}
      - ./web/static:${STATIC}
    environment:
      - WEB_HOST=${WEB_HOST}
      - WEB_DOCKERNAME=${WEB_DOCKERNAME}
    ports:
      - "80:80" # http
      - "443:443" # https
    depends_on:
      - web

#  certbot:
#    image: certbot/certbot
#    container_name: certbot_service
#    volumes :
#      - ./certbot/conf:${LETSENCRYPT}
#      - ./certbot/www:${CERTBOT}
#    entrypoint:
#      - "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
